var backtrack=backtrack||{DIR_MAP:[2,3,0,1]};backtrack.model=function(t){this.direction=["north","east","south","west"],this.tree=null,this.pointer=this.tree,this.nodeRevisited=!1,this.backtracked=!1,this.currentDir=-1,this.backtrackDir=-1,this.lastX,this.lastY,this.debugOn=!1,this.setRoot=function(t,i){this.tree||(this.pointer=this.tree=new trackNode(0,this.lastX=t,this.lastY=i,0))},this.onTrack=function(t,i){if(this.debugOn&&console.log("backtrack? "+this.backtracked+" node visited: "+this.nodeRevisited+" backtrack dir: "+this.backtrackDir+" current dir: "+this.currentDir),!this.tree)return this.pointer=this.tree=new trackNode(0,this.lastX=t,this.lastY=i,0),!1;var r;if(this.lastX!=t&&this.lastY!=i)return console.log("Unexpected move x:"+t+" y:"+i+"lastX:"+this.lastX+"lastY:"+this.lastY),!1;if(this.lastX==t&&this.lastY==i)return console.log("Cursor freezes"),!1;if(r=this.getDirection([this.lastX,this.lastY],[t,i]),-1==this.currentDir)this.currentDir=r,this.backtrackDir=backtrack.DIR_MAP[r];else if(r!=this.currentDir){if(this.nodeRevisited&&r==this.backtrackDir){if(this.rootVisited(t,i))return!0;if(this.pointer.head.child[backtrack.DIR_MAP[r]]=0,this.pointer=this.pointer.head,t==this.pointer.pos[0]&&i==this.pointer.pos[1]){if(this.rootVisited(t,i))return!0;this.nodeRevisited=!0,this.backtrackDir=this.pointer.direction}else this.nodeRevisited=!1;return this.currentDir=r,this.lastX=t,this.lastY=i,!0}if(this.nodeRevisited&&r==backtrack.DIR_MAP[this.backtrackDir])this.pointer.head.child[r]=0,this.pointer=this.pointer.head,this.nodeRevisited=!1,this.currentDir=r;else if(this.nodeRevisited)this.nodeRevisited=!1,this.currenDir=r;else{if(r==backtrack.DIR_MAP[this.currentDir]){if(t==this.pointer.pos[0]&&i==this.pointer.pos[1]){if(this.rootVisited(t,i))return!0;this.nodeRevisited=!0,this.backtrackDir=this.pointer.direction}else this.backtrackDir=r;return this.currentDir=r,this.lastX=t,this.lastY=i,!0}if(r==backtrack.DIR_MAP[this.backtrackDir])return this.currentDir=r,this.lastX=t,this.lastY=i,!0;this.debugOn&&console.log("new node: "+t+", "+i);var s=backtrack.DIR_MAP[this.currentDir];this.pointer=this.pointer.child[s]=new trackNode(this.pointer,this.lastX,this.lastY,this.currentDir),this.backtrackDir=backtrack.DIR_MAP[this.currentDir=r]}}else{if(r==this.backtrackDir){if(t==this.pointer.pos[0]&&i==this.pointer.pos[1]){if(this.rootVisited(t,i))return!0;this.nodeRevisited=!0,this.backtrackDir=this.pointer.direction}return this.lastX=t,this.lastY=i,!0}this.nodeRevisited&&r!=this.backtrackDir&&(this.nodeRevisited=!1,this.backtrackDir=backtrack.DIR_MAP[r])}return this.lastX=t,this.lastY=i,!1},this.rootVisited=function(t,i){return 0==this.pointer.head?(this.currentDir=-1,this.backtrackDir=-1,this.nodeRevisited=!1,this.lastX=t,this.lastY=i,!0):!1},this.getDirection=function(t,i){return t[0]!=i[0]?i[0]>t[0]?1:3:t[1]!=i[1]?i[1]>t[1]?2:0:void 0},this.forwardSearch=function(t,i,r){return t.pos[0]==i&&t.pos[1]==r?!0:forwardTraverse(t,[i,r])?!0:!1},this.forwardTraverse=function(t,i){var r=t.child;if(0==r)return!1;for(var s=0;4>s;s++)if(0!=r[s]){if(r[s].pos[0]==i[0]&&r[s].pos[1]==i[1])return!0;if(forwardTraverse(t,i))return!0}return!1},this.backwardSearch=function(t,i,r){return 0!=t.head?backwardTraverse(t.head,[i,r])?!0:!1:void 0},this.backwardTraverse=function(t,i){return t.pos[0]==i[0]&&t.pos[1]==i[1]?!0:0!=t.head?backwardTraverse(t.head,i):!1}};var trackNode=function(t,i,r,s){this.direction=backtrack.DIR_MAP[s],this.head=t,this.pos=[i,r],this.child=[0,0,0,0]};