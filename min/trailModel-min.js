var backtrack=backtrack||{DIR_MAP:[2,3,0,1]};backtrack.model=function(t){this.direction=["north","east","south","west"],this.tree=null,this.pointer=this.tree,this.nodeRevisited=!1,this.backtracked=!1,this.currentDir=-1,this.backtrackDir=-1,this.lastX,this.lastY,this.debugOn=!0,this.setRoot=function(t,i){this.tree||(this.pointer=this.tree=new trackNode(0,this.lastX=t,this.lastY=i,0))},this.onTrack=function(t,i){if(this.debugOn&&console.log("backtrack? "+this.backtracked+" backtrack dir: "+this.backtrackDir+" current dir: "+this.currentDir),!this.tree)return this.pointer=this.tree=new trackNode(0,this.lastX=t,this.lastY=i,0),!1;var r;if(this.lastX!=t&&this.lastY!=i)return console.log("Unexpected move x:"+t+" y:"+i+"lastX:"+this.lastX+"lastY:"+this.lastY),!1;if(this.lastX==t&&this.lastY==i)return console.log("Cursor freezes"),!1;if(r=this.getDirection([this.lastX,this.lastY],[t,i]),-1==this.currentDir)this.currentDir=r;else if(r!=this.currentDir){if(this.nodeRevisited&&r==this.backtrackDir){if(this.rootVisited(t,i))return!1;if(this.pointer.head.child[backtrack.DIR_MAP[r]]=0,this.pointer=this.pointer.head,t==this.pointer.pos[0]&&i==this.pointer.pos[1]){if(this.rootVisited(t,i))return!1;this.nodeRevisited=!0,this.backtrackDir=this.pointer.direction}else this.nodeRevisited=!1;return this.currentDir=r,this.lastX=t,this.lastY=i,!0}if(!this.backtracked&&this.currentDir==backtrack.DIR_MAP[r]){if(this.currentDir=r,this.backtrackDir=this.currentDir,this.backtracked=!0,t==this.pointer.pos[0]&&i==this.pointer.pos[1]){if(this.rootVisited(t,i))return!1;this.nodeRevisited=!0,this.backtrackDir=this.pointer.direction}return this.lastX=t,this.lastY=i,!0}this.debugOn&&console.log("new node:"+t+","+i);var e=backtrack.DIR_MAP[this.currentDir];this.pointer=this.pointer.child[e]=new trackNode(this.pointer,this.lastX,this.lastY,this.currentDir),this.backtracked=!1,this.backtrackDir=backtrack.DIR_MAP[this.currentDir=r]}else if(r==this.backtrackDir){if(t==this.pointer.pos[0]&&i==this.pointer.pos[1]){if(this.rootVisited(t,i))return!1;this.nodeRevisited=!0,this.backtrackDir=this.pointer.direction}return this.lastX=t,this.lastY=i,!0}return this.lastX=t,this.lastY=i,!1},this.rootVisited=function(t,i){return 0==this.pointer.head?(this.currentDir=-1,this.backtrackDir=-1,this.nodeRevisited=-1,this.lastX=t,this.lastY=i,!0):!1},this.getDirection=function(t,i){return t[0]!=i[0]?i[0]>t[0]?1:3:t[1]!=i[1]?i[1]>t[1]?2:0:void 0},this.forwardSearch=function(t,i,r){return t.pos[0]==i&&t.pos[1]==r?!0:forwardTraverse(t,[i,r])?!0:!1},this.forwardTraverse=function(t,i){var r=t.child;if(0==r)return!1;for(var e=0;4>e;e++)if(0!=r[e]){if(r[e].pos[0]==i[0]&&r[e].pos[1]==i[1])return!0;if(forwardTraverse(t,i))return!0}return!1},this.backwardSearch=function(t,i,r){return 0!=t.head?backwardTraverse(t.head,[i,r])?!0:!1:void 0},this.backwardTraverse=function(t,i){return t.pos[0]==i[0]&&t.pos[1]==i[1]?!0:0!=t.head?backwardTraverse(t.head,i):!1}};var trackNode=function(t,i,r,e){this.direction=backtrack.DIR_MAP[e],this.head=t,this.pos=[i,r],this.child=[0,0,0,0]},trailModel={width:20,height:20,overlayEffectOn:!1,backTrackOn:!0,theBoard:[],userData:{ID:"",timer:0,step:0,level:0},create:function(t,i){trailModel.width="undefined"!=typeof i?i.width||trailModel.width:trailModel.width,trailModel.height="undefined"!=typeof i?i.height||trailModel.height:trailModel.height,this.dot=t,this.trace={},this.lastDot=0,this.lastX=0,this.lastY=0;for(var r=trailModel.width;r--;){trailModel.theBoard.push([]);for(var e=trailModel.height;e--;)trailModel.theBoard[trailModel.width-r-1].push(0)}this.setOverlayEffect=function(t){trailModel.overlayEffectOn=boolean(t)},this.setBackTrack=function(t){trailModel.backTrackOn=boolean(t)},this.trace=new backtrack.model}};trailModel.create.prototype.exists=function(t,i){var r=!trailModel.backTrackOn||(r=this.trace.onTrack(t,i)),e=trailModel.theBoard[t][i];return console.log(t+","+i+":"+r),e?(r&&(this.lastDot=e,e.remove(),trailModel.theBoard[this.lastX=t][this.lastY=i]=0),trailModel.overlayEffectOn,!0):!1},trailModel.create.prototype.makeTrail=function(t,i){var r=i.x,e=i.y,s=r/32,a=e/32;this.exists(s,a)||(0!=this.lastDot&&(t.prepend(this.lastDot),this.lastDot=0),this.lastDot=new this.dot(r,e),trailModel.theBoard[this.lastX=s][this.lastY=a]=this.lastDot)},trailModel.userData=function(){this.startTime=0,this.startTimer=function(){this.startTime=Date.getTime()},this.Step=function(){++trailModel.userData.step},this.setLevel=function(t){trailModel.userData.level=t},this.getGameTime=function(){return trailModel.userData.timer=(Date.getTime()-this.StartTime)/1e3}};